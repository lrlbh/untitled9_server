// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gua_info.proto

#ifndef PROTOBUF_INCLUDED_gua_5finfo_2eproto
#define PROTOBUF_INCLUDED_gua_5finfo_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_gua_5finfo_2eproto 

namespace protobuf_gua_5finfo_2eproto {
	// Internal implementation detail -- do not use these members.
	struct TableStruct {
		static const ::google::protobuf::internal::ParseTableField entries[];
		static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
		static const ::google::protobuf::internal::ParseTable schema[10];
		static const ::google::protobuf::internal::FieldMetadata field_metadata[];
		static const ::google::protobuf::internal::SerializationTable serialization_table[];
		static const ::google::protobuf::uint32 offsets[];
	};
	void AddDescriptors();
}  // namespace protobuf_gua_5finfo_2eproto
class Verification;
class VerificationDefaultTypeInternal;
extern VerificationDefaultTypeInternal _Verification_default_instance_;
class aes_key;
class aes_keyDefaultTypeInternal;
extern aes_keyDefaultTypeInternal _aes_key_default_instance_;
class dao_de_jing;
class dao_de_jingDefaultTypeInternal;
extern dao_de_jingDefaultTypeInternal _dao_de_jing_default_instance_;
class gua;
class guaDefaultTypeInternal;
extern guaDefaultTypeInternal _gua_default_instance_;
class is_ok;
class is_okDefaultTypeInternal;
extern is_okDefaultTypeInternal _is_ok_default_instance_;
class registered;
class registeredDefaultTypeInternal;
extern registeredDefaultTypeInternal _registered_default_instance_;
class registered_phone;
class registered_phoneDefaultTypeInternal;
extern registered_phoneDefaultTypeInternal _registered_phone_default_instance_;
class ret_registered_phone;
class ret_registered_phoneDefaultTypeInternal;
extern ret_registered_phoneDefaultTypeInternal _ret_registered_phone_default_instance_;
class send_pub_key;
class send_pub_keyDefaultTypeInternal;
extern send_pub_keyDefaultTypeInternal _send_pub_key_default_instance_;
class yao;
class yaoDefaultTypeInternal;
extern yaoDefaultTypeInternal _yao_default_instance_;
namespace google {
	namespace protobuf {
		template<> ::Verification* Arena::CreateMaybeMessage<::Verification>(Arena*);
		template<> ::aes_key* Arena::CreateMaybeMessage<::aes_key>(Arena*);
		template<> ::dao_de_jing* Arena::CreateMaybeMessage<::dao_de_jing>(Arena*);
		template<> ::gua* Arena::CreateMaybeMessage<::gua>(Arena*);
		template<> ::is_ok* Arena::CreateMaybeMessage<::is_ok>(Arena*);
		template<> ::registered* Arena::CreateMaybeMessage<::registered>(Arena*);
		template<> ::registered_phone* Arena::CreateMaybeMessage<::registered_phone>(Arena*);
		template<> ::ret_registered_phone* Arena::CreateMaybeMessage<::ret_registered_phone>(Arena*);
		template<> ::send_pub_key* Arena::CreateMaybeMessage<::send_pub_key>(Arena*);
		template<> ::yao* Arena::CreateMaybeMessage<::yao>(Arena*);
	}  // namespace protobuf
}  // namespace google

// ===================================================================

class yao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:yao) */ {
public:
	yao();
	virtual ~yao();

	yao(const yao& from);

	inline yao& operator=(const yao& from) {
		CopyFrom(from);
		return *this;
	}
#if LANG_CXX11
	yao(yao&& from) noexcept
		: yao() {
		*this = ::std::move(from);
	}

	inline yao& operator=(yao&& from) noexcept {
		if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
			if (this != &from) InternalSwap(&from);
		}
		else {
			CopyFrom(from);
		}
		return *this;
	}
#endif
	static const ::google::protobuf::Descriptor* descriptor();
	static const yao& default_instance();

	static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
	static inline const yao* internal_default_instance() {
		return reinterpret_cast<const yao*>(
			&_yao_default_instance_);
	}
	static constexpr int kIndexInFileMessages =
		0;

	void Swap(yao* other);
	friend void swap(yao& a, yao& b) {
		a.Swap(&b);
	}

	// implements Message ----------------------------------------------

	inline yao* New() const final {
		return CreateMaybeMessage<yao>(NULL);
	}

	yao* New(::google::protobuf::Arena* arena) const final {
		return CreateMaybeMessage<yao>(arena);
	}
	void CopyFrom(const ::google::protobuf::Message& from) final;
	void MergeFrom(const ::google::protobuf::Message& from) final;
	void CopyFrom(const yao& from);
	void MergeFrom(const yao& from);
	void Clear() final;
	bool IsInitialized() const final;

	size_t ByteSizeLong() const final;
	bool MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) final;
	void SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const final;
	::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const final;
	int GetCachedSize() const final { return _cached_size_.Get(); }

private:
	void SharedCtor();
	void SharedDtor();
	void SetCachedSize(int size) const final;
	void InternalSwap(yao* other);
private:
	inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
		return NULL;
	}
	inline void* MaybeArenaPtr() const {
		return NULL;
	}
public:

	::google::protobuf::Metadata GetMetadata() const final;

	// nested types ----------------------------------------------------

	// accessors -------------------------------------------------------

	// bytes info = 2;
	void clear_info();
	static const int kInfoFieldNumber = 2;
	const ::std::string& info() const;
	void set_info(const ::std::string& value);
#if LANG_CXX11
	void set_info(::std::string&& value);
#endif
	void set_info(const char* value);
	void set_info(const void* value, size_t size);
	::std::string* mutable_info();
	::std::string* release_info();
	void set_allocated_info(::std::string* info);

	// bool is_yang = 1;
	void clear_is_yang();
	static const int kIsYangFieldNumber = 1;
	bool is_yang() const;
	void set_is_yang(bool value);

	// @@protoc_insertion_point(class_scope:yao)
private:

	::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
	::google::protobuf::internal::ArenaStringPtr info_;
	bool is_yang_;
	mutable ::google::protobuf::internal::CachedSize _cached_size_;
	friend struct ::protobuf_gua_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gua : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gua) */ {
public:
	gua();
	virtual ~gua();

	gua(const gua& from);

	inline gua& operator=(const gua& from) {
		CopyFrom(from);
		return *this;
	}
#if LANG_CXX11
	gua(gua&& from) noexcept
		: gua() {
		*this = ::std::move(from);
	}

	inline gua& operator=(gua&& from) noexcept {
		if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
			if (this != &from) InternalSwap(&from);
		}
		else {
			CopyFrom(from);
		}
		return *this;
	}
#endif
	static const ::google::protobuf::Descriptor* descriptor();
	static const gua& default_instance();

	static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
	static inline const gua* internal_default_instance() {
		return reinterpret_cast<const gua*>(
			&_gua_default_instance_);
	}
	static constexpr int kIndexInFileMessages =
		1;

	void Swap(gua* other);
	friend void swap(gua& a, gua& b) {
		a.Swap(&b);
	}

	// implements Message ----------------------------------------------

	inline gua* New() const final {
		return CreateMaybeMessage<gua>(NULL);
	}

	gua* New(::google::protobuf::Arena* arena) const final {
		return CreateMaybeMessage<gua>(arena);
	}
	void CopyFrom(const ::google::protobuf::Message& from) final;
	void MergeFrom(const ::google::protobuf::Message& from) final;
	void CopyFrom(const gua& from);
	void MergeFrom(const gua& from);
	void Clear() final;
	bool IsInitialized() const final;

	size_t ByteSizeLong() const final;
	bool MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) final;
	void SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const final;
	::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const final;
	int GetCachedSize() const final { return _cached_size_.Get(); }

private:
	void SharedCtor();
	void SharedDtor();
	void SetCachedSize(int size) const final;
	void InternalSwap(gua* other);
private:
	inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
		return NULL;
	}
	inline void* MaybeArenaPtr() const {
		return NULL;
	}
public:

	::google::protobuf::Metadata GetMetadata() const final;

	// nested types ----------------------------------------------------

	// accessors -------------------------------------------------------

	// repeated .yao ben_gua_yao_info = 3;
	int ben_gua_yao_info_size() const;
	void clear_ben_gua_yao_info();
	static const int kBenGuaYaoInfoFieldNumber = 3;
	::yao* mutable_ben_gua_yao_info(int index);
	::google::protobuf::RepeatedPtrField< ::yao >*
		mutable_ben_gua_yao_info();
	const ::yao& ben_gua_yao_info(int index) const;
	::yao* add_ben_gua_yao_info();
	const ::google::protobuf::RepeatedPtrField< ::yao >&
		ben_gua_yao_info() const;

	// repeated .yao bian_gua_yao_info = 6;
	int bian_gua_yao_info_size() const;
	void clear_bian_gua_yao_info();
	static const int kBianGuaYaoInfoFieldNumber = 6;
	::yao* mutable_bian_gua_yao_info(int index);
	::google::protobuf::RepeatedPtrField< ::yao >*
		mutable_bian_gua_yao_info();
	const ::yao& bian_gua_yao_info(int index) const;
	::yao* add_bian_gua_yao_info();
	const ::google::protobuf::RepeatedPtrField< ::yao >&
		bian_gua_yao_info() const;

	// bytes ben_gua_name = 1;
	void clear_ben_gua_name();
	static const int kBenGuaNameFieldNumber = 1;
	const ::std::string& ben_gua_name() const;
	void set_ben_gua_name(const ::std::string& value);
#if LANG_CXX11
	void set_ben_gua_name(::std::string&& value);
#endif
	void set_ben_gua_name(const char* value);
	void set_ben_gua_name(const void* value, size_t size);
	::std::string* mutable_ben_gua_name();
	::std::string* release_ben_gua_name();
	void set_allocated_ben_gua_name(::std::string* ben_gua_name);

	// bytes ben_gua_info = 2;
	void clear_ben_gua_info();
	static const int kBenGuaInfoFieldNumber = 2;
	const ::std::string& ben_gua_info() const;
	void set_ben_gua_info(const ::std::string& value);
#if LANG_CXX11
	void set_ben_gua_info(::std::string&& value);
#endif
	void set_ben_gua_info(const char* value);
	void set_ben_gua_info(const void* value, size_t size);
	::std::string* mutable_ben_gua_info();
	::std::string* release_ben_gua_info();
	void set_allocated_ben_gua_info(::std::string* ben_gua_info);

	// bytes bian_gua_name = 4;
	void clear_bian_gua_name();
	static const int kBianGuaNameFieldNumber = 4;
	const ::std::string& bian_gua_name() const;
	void set_bian_gua_name(const ::std::string& value);
#if LANG_CXX11
	void set_bian_gua_name(::std::string&& value);
#endif
	void set_bian_gua_name(const char* value);
	void set_bian_gua_name(const void* value, size_t size);
	::std::string* mutable_bian_gua_name();
	::std::string* release_bian_gua_name();
	void set_allocated_bian_gua_name(::std::string* bian_gua_name);

	// bytes bian_gua_info = 5;
	void clear_bian_gua_info();
	static const int kBianGuaInfoFieldNumber = 5;
	const ::std::string& bian_gua_info() const;
	void set_bian_gua_info(const ::std::string& value);
#if LANG_CXX11
	void set_bian_gua_info(::std::string&& value);
#endif
	void set_bian_gua_info(const char* value);
	void set_bian_gua_info(const void* value, size_t size);
	::std::string* mutable_bian_gua_info();
	::std::string* release_bian_gua_info();
	void set_allocated_bian_gua_info(::std::string* bian_gua_info);

	// int32 bian_yao_count = 7;
	void clear_bian_yao_count();
	static const int kBianYaoCountFieldNumber = 7;
	::google::protobuf::int32 bian_yao_count() const;
	void set_bian_yao_count(::google::protobuf::int32 value);

	// @@protoc_insertion_point(class_scope:gua)
private:

	::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
	::google::protobuf::RepeatedPtrField< ::yao > ben_gua_yao_info_;
	::google::protobuf::RepeatedPtrField< ::yao > bian_gua_yao_info_;
	::google::protobuf::internal::ArenaStringPtr ben_gua_name_;
	::google::protobuf::internal::ArenaStringPtr ben_gua_info_;
	::google::protobuf::internal::ArenaStringPtr bian_gua_name_;
	::google::protobuf::internal::ArenaStringPtr bian_gua_info_;
	::google::protobuf::int32 bian_yao_count_;
	mutable ::google::protobuf::internal::CachedSize _cached_size_;
	friend struct ::protobuf_gua_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class dao_de_jing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dao_de_jing) */ {
public:
	dao_de_jing();
	virtual ~dao_de_jing();

	dao_de_jing(const dao_de_jing& from);

	inline dao_de_jing& operator=(const dao_de_jing& from) {
		CopyFrom(from);
		return *this;
	}
#if LANG_CXX11
	dao_de_jing(dao_de_jing&& from) noexcept
		: dao_de_jing() {
		*this = ::std::move(from);
	}

	inline dao_de_jing& operator=(dao_de_jing&& from) noexcept {
		if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
			if (this != &from) InternalSwap(&from);
		}
		else {
			CopyFrom(from);
		}
		return *this;
	}
#endif
	static const ::google::protobuf::Descriptor* descriptor();
	static const dao_de_jing& default_instance();

	static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
	static inline const dao_de_jing* internal_default_instance() {
		return reinterpret_cast<const dao_de_jing*>(
			&_dao_de_jing_default_instance_);
	}
	static constexpr int kIndexInFileMessages =
		2;

	void Swap(dao_de_jing* other);
	friend void swap(dao_de_jing& a, dao_de_jing& b) {
		a.Swap(&b);
	}

	// implements Message ----------------------------------------------

	inline dao_de_jing* New() const final {
		return CreateMaybeMessage<dao_de_jing>(NULL);
	}

	dao_de_jing* New(::google::protobuf::Arena* arena) const final {
		return CreateMaybeMessage<dao_de_jing>(arena);
	}
	void CopyFrom(const ::google::protobuf::Message& from) final;
	void MergeFrom(const ::google::protobuf::Message& from) final;
	void CopyFrom(const dao_de_jing& from);
	void MergeFrom(const dao_de_jing& from);
	void Clear() final;
	bool IsInitialized() const final;

	size_t ByteSizeLong() const final;
	bool MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) final;
	void SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const final;
	::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const final;
	int GetCachedSize() const final { return _cached_size_.Get(); }

private:
	void SharedCtor();
	void SharedDtor();
	void SetCachedSize(int size) const final;
	void InternalSwap(dao_de_jing* other);
private:
	inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
		return NULL;
	}
	inline void* MaybeArenaPtr() const {
		return NULL;
	}
public:

	::google::protobuf::Metadata GetMetadata() const final;

	// nested types ----------------------------------------------------

	// accessors -------------------------------------------------------

	// bytes message = 1;
	void clear_message();
	static const int kMessageFieldNumber = 1;
	const ::std::string& message() const;
	void set_message(const ::std::string& value);
#if LANG_CXX11
	void set_message(::std::string&& value);
#endif
	void set_message(const char* value);
	void set_message(const void* value, size_t size);
	::std::string* mutable_message();
	::std::string* release_message();
	void set_allocated_message(::std::string* message);

	// @@protoc_insertion_point(class_scope:dao_de_jing)
private:

	::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
	::google::protobuf::internal::ArenaStringPtr message_;
	mutable ::google::protobuf::internal::CachedSize _cached_size_;
	friend struct ::protobuf_gua_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class send_pub_key : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:send_pub_key) */ {
public:
	send_pub_key();
	virtual ~send_pub_key();

	send_pub_key(const send_pub_key& from);

	inline send_pub_key& operator=(const send_pub_key& from) {
		CopyFrom(from);
		return *this;
	}
#if LANG_CXX11
	send_pub_key(send_pub_key&& from) noexcept
		: send_pub_key() {
		*this = ::std::move(from);
	}

	inline send_pub_key& operator=(send_pub_key&& from) noexcept {
		if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
			if (this != &from) InternalSwap(&from);
		}
		else {
			CopyFrom(from);
		}
		return *this;
	}
#endif
	static const ::google::protobuf::Descriptor* descriptor();
	static const send_pub_key& default_instance();

	static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
	static inline const send_pub_key* internal_default_instance() {
		return reinterpret_cast<const send_pub_key*>(
			&_send_pub_key_default_instance_);
	}
	static constexpr int kIndexInFileMessages =
		3;

	void Swap(send_pub_key* other);
	friend void swap(send_pub_key& a, send_pub_key& b) {
		a.Swap(&b);
	}

	// implements Message ----------------------------------------------

	inline send_pub_key* New() const final {
		return CreateMaybeMessage<send_pub_key>(NULL);
	}

	send_pub_key* New(::google::protobuf::Arena* arena) const final {
		return CreateMaybeMessage<send_pub_key>(arena);
	}
	void CopyFrom(const ::google::protobuf::Message& from) final;
	void MergeFrom(const ::google::protobuf::Message& from) final;
	void CopyFrom(const send_pub_key& from);
	void MergeFrom(const send_pub_key& from);
	void Clear() final;
	bool IsInitialized() const final;

	size_t ByteSizeLong() const final;
	bool MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) final;
	void SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const final;
	::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const final;
	int GetCachedSize() const final { return _cached_size_.Get(); }

private:
	void SharedCtor();
	void SharedDtor();
	void SetCachedSize(int size) const final;
	void InternalSwap(send_pub_key* other);
private:
	inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
		return NULL;
	}
	inline void* MaybeArenaPtr() const {
		return NULL;
	}
public:

	::google::protobuf::Metadata GetMetadata() const final;

	// nested types ----------------------------------------------------

	// accessors -------------------------------------------------------

	// bytes pub_key = 1;
	void clear_pub_key();
	static const int kPubKeyFieldNumber = 1;
	const ::std::string& pub_key() const;
	void set_pub_key(const ::std::string& value);
#if LANG_CXX11
	void set_pub_key(::std::string&& value);
#endif
	void set_pub_key(const char* value);
	void set_pub_key(const void* value, size_t size);
	::std::string* mutable_pub_key();
	::std::string* release_pub_key();
	void set_allocated_pub_key(::std::string* pub_key);

	// int32 pub_key_len = 2;
	void clear_pub_key_len();
	static const int kPubKeyLenFieldNumber = 2;
	::google::protobuf::int32 pub_key_len() const;
	void set_pub_key_len(::google::protobuf::int32 value);

	// @@protoc_insertion_point(class_scope:send_pub_key)
private:

	::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
	::google::protobuf::internal::ArenaStringPtr pub_key_;
	::google::protobuf::int32 pub_key_len_;
	mutable ::google::protobuf::internal::CachedSize _cached_size_;
	friend struct ::protobuf_gua_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class aes_key : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aes_key) */ {
public:
	aes_key();
	virtual ~aes_key();

	aes_key(const aes_key& from);

	inline aes_key& operator=(const aes_key& from) {
		CopyFrom(from);
		return *this;
	}
#if LANG_CXX11
	aes_key(aes_key&& from) noexcept
		: aes_key() {
		*this = ::std::move(from);
	}

	inline aes_key& operator=(aes_key&& from) noexcept {
		if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
			if (this != &from) InternalSwap(&from);
		}
		else {
			CopyFrom(from);
		}
		return *this;
	}
#endif
	static const ::google::protobuf::Descriptor* descriptor();
	static const aes_key& default_instance();

	static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
	static inline const aes_key* internal_default_instance() {
		return reinterpret_cast<const aes_key*>(
			&_aes_key_default_instance_);
	}
	static constexpr int kIndexInFileMessages =
		4;

	void Swap(aes_key* other);
	friend void swap(aes_key& a, aes_key& b) {
		a.Swap(&b);
	}

	// implements Message ----------------------------------------------

	inline aes_key* New() const final {
		return CreateMaybeMessage<aes_key>(NULL);
	}

	aes_key* New(::google::protobuf::Arena* arena) const final {
		return CreateMaybeMessage<aes_key>(arena);
	}
	void CopyFrom(const ::google::protobuf::Message& from) final;
	void MergeFrom(const ::google::protobuf::Message& from) final;
	void CopyFrom(const aes_key& from);
	void MergeFrom(const aes_key& from);
	void Clear() final;
	bool IsInitialized() const final;

	size_t ByteSizeLong() const final;
	bool MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) final;
	void SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const final;
	::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const final;
	int GetCachedSize() const final { return _cached_size_.Get(); }

private:
	void SharedCtor();
	void SharedDtor();
	void SetCachedSize(int size) const final;
	void InternalSwap(aes_key* other);
private:
	inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
		return NULL;
	}
	inline void* MaybeArenaPtr() const {
		return NULL;
	}
public:

	::google::protobuf::Metadata GetMetadata() const final;

	// nested types ----------------------------------------------------

	// accessors -------------------------------------------------------

	// bytes key = 1;
	void clear_key();
	static const int kKeyFieldNumber = 1;
	const ::std::string& key() const;
	void set_key(const ::std::string& value);
#if LANG_CXX11
	void set_key(::std::string&& value);
#endif
	void set_key(const char* value);
	void set_key(const void* value, size_t size);
	::std::string* mutable_key();
	::std::string* release_key();
	void set_allocated_key(::std::string* key);

	// bool is_pub_key = 2;
	void clear_is_pub_key();
	static const int kIsPubKeyFieldNumber = 2;
	bool is_pub_key() const;
	void set_is_pub_key(bool value);

	// @@protoc_insertion_point(class_scope:aes_key)
private:

	::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
	::google::protobuf::internal::ArenaStringPtr key_;
	bool is_pub_key_;
	mutable ::google::protobuf::internal::CachedSize _cached_size_;
	friend struct ::protobuf_gua_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class registered_phone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:registered_phone) */ {
public:
	registered_phone();
	virtual ~registered_phone();

	registered_phone(const registered_phone& from);

	inline registered_phone& operator=(const registered_phone& from) {
		CopyFrom(from);
		return *this;
	}
#if LANG_CXX11
	registered_phone(registered_phone&& from) noexcept
		: registered_phone() {
		*this = ::std::move(from);
	}

	inline registered_phone& operator=(registered_phone&& from) noexcept {
		if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
			if (this != &from) InternalSwap(&from);
		}
		else {
			CopyFrom(from);
		}
		return *this;
	}
#endif
	static const ::google::protobuf::Descriptor* descriptor();
	static const registered_phone& default_instance();

	static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
	static inline const registered_phone* internal_default_instance() {
		return reinterpret_cast<const registered_phone*>(
			&_registered_phone_default_instance_);
	}
	static constexpr int kIndexInFileMessages =
		5;

	void Swap(registered_phone* other);
	friend void swap(registered_phone& a, registered_phone& b) {
		a.Swap(&b);
	}

	// implements Message ----------------------------------------------

	inline registered_phone* New() const final {
		return CreateMaybeMessage<registered_phone>(NULL);
	}

	registered_phone* New(::google::protobuf::Arena* arena) const final {
		return CreateMaybeMessage<registered_phone>(arena);
	}
	void CopyFrom(const ::google::protobuf::Message& from) final;
	void MergeFrom(const ::google::protobuf::Message& from) final;
	void CopyFrom(const registered_phone& from);
	void MergeFrom(const registered_phone& from);
	void Clear() final;
	bool IsInitialized() const final;

	size_t ByteSizeLong() const final;
	bool MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) final;
	void SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const final;
	::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const final;
	int GetCachedSize() const final { return _cached_size_.Get(); }

private:
	void SharedCtor();
	void SharedDtor();
	void SetCachedSize(int size) const final;
	void InternalSwap(registered_phone* other);
private:
	inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
		return NULL;
	}
	inline void* MaybeArenaPtr() const {
		return NULL;
	}
public:

	::google::protobuf::Metadata GetMetadata() const final;

	// nested types ----------------------------------------------------

	// accessors -------------------------------------------------------

	// bytes phone_number = 1;
	void clear_phone_number();
	static const int kPhoneNumberFieldNumber = 1;
	const ::std::string& phone_number() const;
	void set_phone_number(const ::std::string& value);
#if LANG_CXX11
	void set_phone_number(::std::string&& value);
#endif
	void set_phone_number(const char* value);
	void set_phone_number(const void* value, size_t size);
	::std::string* mutable_phone_number();
	::std::string* release_phone_number();
	void set_allocated_phone_number(::std::string* phone_number);

	// @@protoc_insertion_point(class_scope:registered_phone)
private:

	::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
	::google::protobuf::internal::ArenaStringPtr phone_number_;
	mutable ::google::protobuf::internal::CachedSize _cached_size_;
	friend struct ::protobuf_gua_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ret_registered_phone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ret_registered_phone) */ {
public:
	ret_registered_phone();
	virtual ~ret_registered_phone();

	ret_registered_phone(const ret_registered_phone& from);

	inline ret_registered_phone& operator=(const ret_registered_phone& from) {
		CopyFrom(from);
		return *this;
	}
#if LANG_CXX11
	ret_registered_phone(ret_registered_phone&& from) noexcept
		: ret_registered_phone() {
		*this = ::std::move(from);
	}

	inline ret_registered_phone& operator=(ret_registered_phone&& from) noexcept {
		if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
			if (this != &from) InternalSwap(&from);
		}
		else {
			CopyFrom(from);
		}
		return *this;
	}
#endif
	static const ::google::protobuf::Descriptor* descriptor();
	static const ret_registered_phone& default_instance();

	static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
	static inline const ret_registered_phone* internal_default_instance() {
		return reinterpret_cast<const ret_registered_phone*>(
			&_ret_registered_phone_default_instance_);
	}
	static constexpr int kIndexInFileMessages =
		6;

	void Swap(ret_registered_phone* other);
	friend void swap(ret_registered_phone& a, ret_registered_phone& b) {
		a.Swap(&b);
	}

	// implements Message ----------------------------------------------

	inline ret_registered_phone* New() const final {
		return CreateMaybeMessage<ret_registered_phone>(NULL);
	}

	ret_registered_phone* New(::google::protobuf::Arena* arena) const final {
		return CreateMaybeMessage<ret_registered_phone>(arena);
	}
	void CopyFrom(const ::google::protobuf::Message& from) final;
	void MergeFrom(const ::google::protobuf::Message& from) final;
	void CopyFrom(const ret_registered_phone& from);
	void MergeFrom(const ret_registered_phone& from);
	void Clear() final;
	bool IsInitialized() const final;

	size_t ByteSizeLong() const final;
	bool MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) final;
	void SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const final;
	::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const final;
	int GetCachedSize() const final { return _cached_size_.Get(); }

private:
	void SharedCtor();
	void SharedDtor();
	void SetCachedSize(int size) const final;
	void InternalSwap(ret_registered_phone* other);
private:
	inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
		return NULL;
	}
	inline void* MaybeArenaPtr() const {
		return NULL;
	}
public:

	::google::protobuf::Metadata GetMetadata() const final;

	// nested types ----------------------------------------------------

	// accessors -------------------------------------------------------

	// int32 verification_state = 1;
	void clear_verification_state();
	static const int kVerificationStateFieldNumber = 1;
	::google::protobuf::int32 verification_state() const;
	void set_verification_state(::google::protobuf::int32 value);

	// @@protoc_insertion_point(class_scope:ret_registered_phone)
private:

	::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
	::google::protobuf::int32 verification_state_;
	mutable ::google::protobuf::internal::CachedSize _cached_size_;
	friend struct ::protobuf_gua_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Verification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Verification) */ {
public:
	Verification();
	virtual ~Verification();

	Verification(const Verification& from);

	inline Verification& operator=(const Verification& from) {
		CopyFrom(from);
		return *this;
	}
#if LANG_CXX11
	Verification(Verification&& from) noexcept
		: Verification() {
		*this = ::std::move(from);
	}

	inline Verification& operator=(Verification&& from) noexcept {
		if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
			if (this != &from) InternalSwap(&from);
		}
		else {
			CopyFrom(from);
		}
		return *this;
	}
#endif
	static const ::google::protobuf::Descriptor* descriptor();
	static const Verification& default_instance();

	static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
	static inline const Verification* internal_default_instance() {
		return reinterpret_cast<const Verification*>(
			&_Verification_default_instance_);
	}
	static constexpr int kIndexInFileMessages =
		7;

	void Swap(Verification* other);
	friend void swap(Verification& a, Verification& b) {
		a.Swap(&b);
	}

	// implements Message ----------------------------------------------

	inline Verification* New() const final {
		return CreateMaybeMessage<Verification>(NULL);
	}

	Verification* New(::google::protobuf::Arena* arena) const final {
		return CreateMaybeMessage<Verification>(arena);
	}
	void CopyFrom(const ::google::protobuf::Message& from) final;
	void MergeFrom(const ::google::protobuf::Message& from) final;
	void CopyFrom(const Verification& from);
	void MergeFrom(const Verification& from);
	void Clear() final;
	bool IsInitialized() const final;

	size_t ByteSizeLong() const final;
	bool MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) final;
	void SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const final;
	::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const final;
	int GetCachedSize() const final { return _cached_size_.Get(); }

private:
	void SharedCtor();
	void SharedDtor();
	void SetCachedSize(int size) const final;
	void InternalSwap(Verification* other);
private:
	inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
		return NULL;
	}
	inline void* MaybeArenaPtr() const {
		return NULL;
	}
public:

	::google::protobuf::Metadata GetMetadata() const final;

	// nested types ----------------------------------------------------

	// accessors -------------------------------------------------------

	// bytes verification = 1;
	void clear_verification();
	static const int kVerificationFieldNumber = 1;
	const ::std::string& verification() const;
	void set_verification(const ::std::string& value);
#if LANG_CXX11
	void set_verification(::std::string&& value);
#endif
	void set_verification(const char* value);
	void set_verification(const void* value, size_t size);
	::std::string* mutable_verification();
	::std::string* release_verification();
	void set_allocated_verification(::std::string* verification);

	// @@protoc_insertion_point(class_scope:Verification)
private:

	::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
	::google::protobuf::internal::ArenaStringPtr verification_;
	mutable ::google::protobuf::internal::CachedSize _cached_size_;
	friend struct ::protobuf_gua_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class registered : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:registered) */ {
public:
	registered();
	virtual ~registered();

	registered(const registered& from);

	inline registered& operator=(const registered& from) {
		CopyFrom(from);
		return *this;
	}
#if LANG_CXX11
	registered(registered&& from) noexcept
		: registered() {
		*this = ::std::move(from);
	}

	inline registered& operator=(registered&& from) noexcept {
		if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
			if (this != &from) InternalSwap(&from);
		}
		else {
			CopyFrom(from);
		}
		return *this;
	}
#endif
	static const ::google::protobuf::Descriptor* descriptor();
	static const registered& default_instance();

	static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
	static inline const registered* internal_default_instance() {
		return reinterpret_cast<const registered*>(
			&_registered_default_instance_);
	}
	static constexpr int kIndexInFileMessages =
		8;

	void Swap(registered* other);
	friend void swap(registered& a, registered& b) {
		a.Swap(&b);
	}

	// implements Message ----------------------------------------------

	inline registered* New() const final {
		return CreateMaybeMessage<registered>(NULL);
	}

	registered* New(::google::protobuf::Arena* arena) const final {
		return CreateMaybeMessage<registered>(arena);
	}
	void CopyFrom(const ::google::protobuf::Message& from) final;
	void MergeFrom(const ::google::protobuf::Message& from) final;
	void CopyFrom(const registered& from);
	void MergeFrom(const registered& from);
	void Clear() final;
	bool IsInitialized() const final;

	size_t ByteSizeLong() const final;
	bool MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) final;
	void SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const final;
	::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const final;
	int GetCachedSize() const final { return _cached_size_.Get(); }

private:
	void SharedCtor();
	void SharedDtor();
	void SetCachedSize(int size) const final;
	void InternalSwap(registered* other);
private:
	inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
		return NULL;
	}
	inline void* MaybeArenaPtr() const {
		return NULL;
	}
public:

	::google::protobuf::Metadata GetMetadata() const final;

	// nested types ----------------------------------------------------

	// accessors -------------------------------------------------------

	// bytes phone_number = 1;
	void clear_phone_number();
	static const int kPhoneNumberFieldNumber = 1;
	const ::std::string& phone_number() const;
	void set_phone_number(const ::std::string& value);
#if LANG_CXX11
	void set_phone_number(::std::string&& value);
#endif
	void set_phone_number(const char* value);
	void set_phone_number(const void* value, size_t size);
	::std::string* mutable_phone_number();
	::std::string* release_phone_number();
	void set_allocated_phone_number(::std::string* phone_number);

	// bytes passwd = 2;
	void clear_passwd();
	static const int kPasswdFieldNumber = 2;
	const ::std::string& passwd() const;
	void set_passwd(const ::std::string& value);
#if LANG_CXX11
	void set_passwd(::std::string&& value);
#endif
	void set_passwd(const char* value);
	void set_passwd(const void* value, size_t size);
	::std::string* mutable_passwd();
	::std::string* release_passwd();
	void set_allocated_passwd(::std::string* passwd);

	// @@protoc_insertion_point(class_scope:registered)
private:

	::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
	::google::protobuf::internal::ArenaStringPtr phone_number_;
	::google::protobuf::internal::ArenaStringPtr passwd_;
	mutable ::google::protobuf::internal::CachedSize _cached_size_;
	friend struct ::protobuf_gua_5finfo_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class is_ok : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:is_ok) */ {
public:
	is_ok();
	virtual ~is_ok();

	is_ok(const is_ok& from);

	inline is_ok& operator=(const is_ok& from) {
		CopyFrom(from);
		return *this;
	}
#if LANG_CXX11
	is_ok(is_ok&& from) noexcept
		: is_ok() {
		*this = ::std::move(from);
	}

	inline is_ok& operator=(is_ok&& from) noexcept {
		if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
			if (this != &from) InternalSwap(&from);
		}
		else {
			CopyFrom(from);
		}
		return *this;
	}
#endif
	static const ::google::protobuf::Descriptor* descriptor();
	static const is_ok& default_instance();

	static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
	static inline const is_ok* internal_default_instance() {
		return reinterpret_cast<const is_ok*>(
			&_is_ok_default_instance_);
	}
	static constexpr int kIndexInFileMessages =
		9;

	void Swap(is_ok* other);
	friend void swap(is_ok& a, is_ok& b) {
		a.Swap(&b);
	}

	// implements Message ----------------------------------------------

	inline is_ok* New() const final {
		return CreateMaybeMessage<is_ok>(NULL);
	}

	is_ok* New(::google::protobuf::Arena* arena) const final {
		return CreateMaybeMessage<is_ok>(arena);
	}
	void CopyFrom(const ::google::protobuf::Message& from) final;
	void MergeFrom(const ::google::protobuf::Message& from) final;
	void CopyFrom(const is_ok& from);
	void MergeFrom(const is_ok& from);
	void Clear() final;
	bool IsInitialized() const final;

	size_t ByteSizeLong() const final;
	bool MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) final;
	void SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const final;
	::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
		bool deterministic, ::google::protobuf::uint8* target) const final;
	int GetCachedSize() const final { return _cached_size_.Get(); }

private:
	void SharedCtor();
	void SharedDtor();
	void SetCachedSize(int size) const final;
	void InternalSwap(is_ok* other);
private:
	inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
		return NULL;
	}
	inline void* MaybeArenaPtr() const {
		return NULL;
	}
public:

	::google::protobuf::Metadata GetMetadata() const final;

	// nested types ----------------------------------------------------

	// accessors -------------------------------------------------------

	// bool is_pub_key = 1;
	void clear_is_pub_key();
	static const int kIsPubKeyFieldNumber = 1;
	bool is_pub_key() const;
	void set_is_pub_key(bool value);

	// @@protoc_insertion_point(class_scope:is_ok)
private:

	::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
	bool is_pub_key_;
	mutable ::google::protobuf::internal::CachedSize _cached_size_;
	friend struct ::protobuf_gua_5finfo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// yao

// bool is_yang = 1;
inline void yao::clear_is_yang() {
	is_yang_ = false;
}
inline bool yao::is_yang() const {
	// @@protoc_insertion_point(field_get:yao.is_yang)
	return is_yang_;
}
inline void yao::set_is_yang(bool value) {

	is_yang_ = value;
	// @@protoc_insertion_point(field_set:yao.is_yang)
}

// bytes info = 2;
inline void yao::clear_info() {
	info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& yao::info() const {
	// @@protoc_insertion_point(field_get:yao.info)
	return info_.GetNoArena();
}
inline void yao::set_info(const ::std::string& value) {

	info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:yao.info)
}
#if LANG_CXX11
inline void yao::set_info(::std::string&& value) {

	info_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:yao.info)
}
#endif
inline void yao::set_info(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:yao.info)
}
inline void yao::set_info(const void* value, size_t size) {

	info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:yao.info)
}
inline ::std::string* yao::mutable_info() {

	// @@protoc_insertion_point(field_mutable:yao.info)
	return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* yao::release_info() {
	// @@protoc_insertion_point(field_release:yao.info)

	return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void yao::set_allocated_info(::std::string* info) {
	if (info != NULL) {

	}
	else {

	}
	info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
	// @@protoc_insertion_point(field_set_allocated:yao.info)
}

// -------------------------------------------------------------------

// gua

// bytes ben_gua_name = 1;
inline void gua::clear_ben_gua_name() {
	ben_gua_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gua::ben_gua_name() const {
	// @@protoc_insertion_point(field_get:gua.ben_gua_name)
	return ben_gua_name_.GetNoArena();
}
inline void gua::set_ben_gua_name(const ::std::string& value) {

	ben_gua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:gua.ben_gua_name)
}
#if LANG_CXX11
inline void gua::set_ben_gua_name(::std::string&& value) {

	ben_gua_name_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:gua.ben_gua_name)
}
#endif
inline void gua::set_ben_gua_name(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	ben_gua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:gua.ben_gua_name)
}
inline void gua::set_ben_gua_name(const void* value, size_t size) {

	ben_gua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:gua.ben_gua_name)
}
inline ::std::string* gua::mutable_ben_gua_name() {

	// @@protoc_insertion_point(field_mutable:gua.ben_gua_name)
	return ben_gua_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gua::release_ben_gua_name() {
	// @@protoc_insertion_point(field_release:gua.ben_gua_name)

	return ben_gua_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gua::set_allocated_ben_gua_name(::std::string* ben_gua_name) {
	if (ben_gua_name != NULL) {

	}
	else {

	}
	ben_gua_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ben_gua_name);
	// @@protoc_insertion_point(field_set_allocated:gua.ben_gua_name)
}

// bytes ben_gua_info = 2;
inline void gua::clear_ben_gua_info() {
	ben_gua_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gua::ben_gua_info() const {
	// @@protoc_insertion_point(field_get:gua.ben_gua_info)
	return ben_gua_info_.GetNoArena();
}
inline void gua::set_ben_gua_info(const ::std::string& value) {

	ben_gua_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:gua.ben_gua_info)
}
#if LANG_CXX11
inline void gua::set_ben_gua_info(::std::string&& value) {

	ben_gua_info_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:gua.ben_gua_info)
}
#endif
inline void gua::set_ben_gua_info(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	ben_gua_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:gua.ben_gua_info)
}
inline void gua::set_ben_gua_info(const void* value, size_t size) {

	ben_gua_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:gua.ben_gua_info)
}
inline ::std::string* gua::mutable_ben_gua_info() {

	// @@protoc_insertion_point(field_mutable:gua.ben_gua_info)
	return ben_gua_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gua::release_ben_gua_info() {
	// @@protoc_insertion_point(field_release:gua.ben_gua_info)

	return ben_gua_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gua::set_allocated_ben_gua_info(::std::string* ben_gua_info) {
	if (ben_gua_info != NULL) {

	}
	else {

	}
	ben_gua_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ben_gua_info);
	// @@protoc_insertion_point(field_set_allocated:gua.ben_gua_info)
}

// repeated .yao ben_gua_yao_info = 3;
inline int gua::ben_gua_yao_info_size() const {
	return ben_gua_yao_info_.size();
}
inline void gua::clear_ben_gua_yao_info() {
	ben_gua_yao_info_.Clear();
}
inline ::yao* gua::mutable_ben_gua_yao_info(int index) {
	// @@protoc_insertion_point(field_mutable:gua.ben_gua_yao_info)
	return ben_gua_yao_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::yao >*
gua::mutable_ben_gua_yao_info() {
	// @@protoc_insertion_point(field_mutable_list:gua.ben_gua_yao_info)
	return &ben_gua_yao_info_;
}
inline const ::yao& gua::ben_gua_yao_info(int index) const {
	// @@protoc_insertion_point(field_get:gua.ben_gua_yao_info)
	return ben_gua_yao_info_.Get(index);
}
inline ::yao* gua::add_ben_gua_yao_info() {
	// @@protoc_insertion_point(field_add:gua.ben_gua_yao_info)
	return ben_gua_yao_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::yao >&
gua::ben_gua_yao_info() const {
	// @@protoc_insertion_point(field_list:gua.ben_gua_yao_info)
	return ben_gua_yao_info_;
}

// bytes bian_gua_name = 4;
inline void gua::clear_bian_gua_name() {
	bian_gua_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gua::bian_gua_name() const {
	// @@protoc_insertion_point(field_get:gua.bian_gua_name)
	return bian_gua_name_.GetNoArena();
}
inline void gua::set_bian_gua_name(const ::std::string& value) {

	bian_gua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:gua.bian_gua_name)
}
#if LANG_CXX11
inline void gua::set_bian_gua_name(::std::string&& value) {

	bian_gua_name_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:gua.bian_gua_name)
}
#endif
inline void gua::set_bian_gua_name(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	bian_gua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:gua.bian_gua_name)
}
inline void gua::set_bian_gua_name(const void* value, size_t size) {

	bian_gua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:gua.bian_gua_name)
}
inline ::std::string* gua::mutable_bian_gua_name() {

	// @@protoc_insertion_point(field_mutable:gua.bian_gua_name)
	return bian_gua_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gua::release_bian_gua_name() {
	// @@protoc_insertion_point(field_release:gua.bian_gua_name)

	return bian_gua_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gua::set_allocated_bian_gua_name(::std::string* bian_gua_name) {
	if (bian_gua_name != NULL) {

	}
	else {

	}
	bian_gua_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bian_gua_name);
	// @@protoc_insertion_point(field_set_allocated:gua.bian_gua_name)
}

// bytes bian_gua_info = 5;
inline void gua::clear_bian_gua_info() {
	bian_gua_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& gua::bian_gua_info() const {
	// @@protoc_insertion_point(field_get:gua.bian_gua_info)
	return bian_gua_info_.GetNoArena();
}
inline void gua::set_bian_gua_info(const ::std::string& value) {

	bian_gua_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:gua.bian_gua_info)
}
#if LANG_CXX11
inline void gua::set_bian_gua_info(::std::string&& value) {

	bian_gua_info_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:gua.bian_gua_info)
}
#endif
inline void gua::set_bian_gua_info(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	bian_gua_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:gua.bian_gua_info)
}
inline void gua::set_bian_gua_info(const void* value, size_t size) {

	bian_gua_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:gua.bian_gua_info)
}
inline ::std::string* gua::mutable_bian_gua_info() {

	// @@protoc_insertion_point(field_mutable:gua.bian_gua_info)
	return bian_gua_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gua::release_bian_gua_info() {
	// @@protoc_insertion_point(field_release:gua.bian_gua_info)

	return bian_gua_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gua::set_allocated_bian_gua_info(::std::string* bian_gua_info) {
	if (bian_gua_info != NULL) {

	}
	else {

	}
	bian_gua_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bian_gua_info);
	// @@protoc_insertion_point(field_set_allocated:gua.bian_gua_info)
}

// repeated .yao bian_gua_yao_info = 6;
inline int gua::bian_gua_yao_info_size() const {
	return bian_gua_yao_info_.size();
}
inline void gua::clear_bian_gua_yao_info() {
	bian_gua_yao_info_.Clear();
}
inline ::yao* gua::mutable_bian_gua_yao_info(int index) {
	// @@protoc_insertion_point(field_mutable:gua.bian_gua_yao_info)
	return bian_gua_yao_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::yao >*
gua::mutable_bian_gua_yao_info() {
	// @@protoc_insertion_point(field_mutable_list:gua.bian_gua_yao_info)
	return &bian_gua_yao_info_;
}
inline const ::yao& gua::bian_gua_yao_info(int index) const {
	// @@protoc_insertion_point(field_get:gua.bian_gua_yao_info)
	return bian_gua_yao_info_.Get(index);
}
inline ::yao* gua::add_bian_gua_yao_info() {
	// @@protoc_insertion_point(field_add:gua.bian_gua_yao_info)
	return bian_gua_yao_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::yao >&
gua::bian_gua_yao_info() const {
	// @@protoc_insertion_point(field_list:gua.bian_gua_yao_info)
	return bian_gua_yao_info_;
}

// int32 bian_yao_count = 7;
inline void gua::clear_bian_yao_count() {
	bian_yao_count_ = 0;
}
inline ::google::protobuf::int32 gua::bian_yao_count() const {
	// @@protoc_insertion_point(field_get:gua.bian_yao_count)
	return bian_yao_count_;
}
inline void gua::set_bian_yao_count(::google::protobuf::int32 value) {

	bian_yao_count_ = value;
	// @@protoc_insertion_point(field_set:gua.bian_yao_count)
}

// -------------------------------------------------------------------

// dao_de_jing

// bytes message = 1;
inline void dao_de_jing::clear_message() {
	message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& dao_de_jing::message() const {
	// @@protoc_insertion_point(field_get:dao_de_jing.message)
	return message_.GetNoArena();
}
inline void dao_de_jing::set_message(const ::std::string& value) {

	message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:dao_de_jing.message)
}
#if LANG_CXX11
inline void dao_de_jing::set_message(::std::string&& value) {

	message_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:dao_de_jing.message)
}
#endif
inline void dao_de_jing::set_message(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:dao_de_jing.message)
}
inline void dao_de_jing::set_message(const void* value, size_t size) {

	message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:dao_de_jing.message)
}
inline ::std::string* dao_de_jing::mutable_message() {

	// @@protoc_insertion_point(field_mutable:dao_de_jing.message)
	return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* dao_de_jing::release_message() {
	// @@protoc_insertion_point(field_release:dao_de_jing.message)

	return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void dao_de_jing::set_allocated_message(::std::string* message) {
	if (message != NULL) {

	}
	else {

	}
	message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
	// @@protoc_insertion_point(field_set_allocated:dao_de_jing.message)
}

// -------------------------------------------------------------------

// send_pub_key

// bytes pub_key = 1;
inline void send_pub_key::clear_pub_key() {
	pub_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& send_pub_key::pub_key() const {
	// @@protoc_insertion_point(field_get:send_pub_key.pub_key)
	return pub_key_.GetNoArena();
}
inline void send_pub_key::set_pub_key(const ::std::string& value) {

	pub_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:send_pub_key.pub_key)
}
#if LANG_CXX11
inline void send_pub_key::set_pub_key(::std::string&& value) {

	pub_key_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:send_pub_key.pub_key)
}
#endif
inline void send_pub_key::set_pub_key(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	pub_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:send_pub_key.pub_key)
}
inline void send_pub_key::set_pub_key(const void* value, size_t size) {

	pub_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:send_pub_key.pub_key)
}
inline ::std::string* send_pub_key::mutable_pub_key() {

	// @@protoc_insertion_point(field_mutable:send_pub_key.pub_key)
	return pub_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* send_pub_key::release_pub_key() {
	// @@protoc_insertion_point(field_release:send_pub_key.pub_key)

	return pub_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void send_pub_key::set_allocated_pub_key(::std::string* pub_key) {
	if (pub_key != NULL) {

	}
	else {

	}
	pub_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pub_key);
	// @@protoc_insertion_point(field_set_allocated:send_pub_key.pub_key)
}

// int32 pub_key_len = 2;
inline void send_pub_key::clear_pub_key_len() {
	pub_key_len_ = 0;
}
inline ::google::protobuf::int32 send_pub_key::pub_key_len() const {
	// @@protoc_insertion_point(field_get:send_pub_key.pub_key_len)
	return pub_key_len_;
}
inline void send_pub_key::set_pub_key_len(::google::protobuf::int32 value) {

	pub_key_len_ = value;
	// @@protoc_insertion_point(field_set:send_pub_key.pub_key_len)
}

// -------------------------------------------------------------------

// aes_key

// bytes key = 1;
inline void aes_key::clear_key() {
	key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& aes_key::key() const {
	// @@protoc_insertion_point(field_get:aes_key.key)
	return key_.GetNoArena();
}
inline void aes_key::set_key(const ::std::string& value) {

	key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:aes_key.key)
}
#if LANG_CXX11
inline void aes_key::set_key(::std::string&& value) {

	key_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:aes_key.key)
}
#endif
inline void aes_key::set_key(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:aes_key.key)
}
inline void aes_key::set_key(const void* value, size_t size) {

	key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:aes_key.key)
}
inline ::std::string* aes_key::mutable_key() {

	// @@protoc_insertion_point(field_mutable:aes_key.key)
	return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* aes_key::release_key() {
	// @@protoc_insertion_point(field_release:aes_key.key)

	return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void aes_key::set_allocated_key(::std::string* key) {
	if (key != NULL) {

	}
	else {

	}
	key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
	// @@protoc_insertion_point(field_set_allocated:aes_key.key)
}

// bool is_pub_key = 2;
inline void aes_key::clear_is_pub_key() {
	is_pub_key_ = false;
}
inline bool aes_key::is_pub_key() const {
	// @@protoc_insertion_point(field_get:aes_key.is_pub_key)
	return is_pub_key_;
}
inline void aes_key::set_is_pub_key(bool value) {

	is_pub_key_ = value;
	// @@protoc_insertion_point(field_set:aes_key.is_pub_key)
}

// -------------------------------------------------------------------

// registered_phone

// bytes phone_number = 1;
inline void registered_phone::clear_phone_number() {
	phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& registered_phone::phone_number() const {
	// @@protoc_insertion_point(field_get:registered_phone.phone_number)
	return phone_number_.GetNoArena();
}
inline void registered_phone::set_phone_number(const ::std::string& value) {

	phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:registered_phone.phone_number)
}
#if LANG_CXX11
inline void registered_phone::set_phone_number(::std::string&& value) {

	phone_number_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:registered_phone.phone_number)
}
#endif
inline void registered_phone::set_phone_number(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:registered_phone.phone_number)
}
inline void registered_phone::set_phone_number(const void* value, size_t size) {

	phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:registered_phone.phone_number)
}
inline ::std::string* registered_phone::mutable_phone_number() {

	// @@protoc_insertion_point(field_mutable:registered_phone.phone_number)
	return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* registered_phone::release_phone_number() {
	// @@protoc_insertion_point(field_release:registered_phone.phone_number)

	return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void registered_phone::set_allocated_phone_number(::std::string* phone_number) {
	if (phone_number != NULL) {

	}
	else {

	}
	phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
	// @@protoc_insertion_point(field_set_allocated:registered_phone.phone_number)
}

// -------------------------------------------------------------------

// ret_registered_phone

// int32 verification_state = 1;
inline void ret_registered_phone::clear_verification_state() {
	verification_state_ = 0;
}
inline ::google::protobuf::int32 ret_registered_phone::verification_state() const {
	// @@protoc_insertion_point(field_get:ret_registered_phone.verification_state)
	return verification_state_;
}
inline void ret_registered_phone::set_verification_state(::google::protobuf::int32 value) {

	verification_state_ = value;
	// @@protoc_insertion_point(field_set:ret_registered_phone.verification_state)
}

// -------------------------------------------------------------------

// Verification

// bytes verification = 1;
inline void Verification::clear_verification() {
	verification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Verification::verification() const {
	// @@protoc_insertion_point(field_get:Verification.verification)
	return verification_.GetNoArena();
}
inline void Verification::set_verification(const ::std::string& value) {

	verification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:Verification.verification)
}
#if LANG_CXX11
inline void Verification::set_verification(::std::string&& value) {

	verification_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:Verification.verification)
}
#endif
inline void Verification::set_verification(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	verification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:Verification.verification)
}
inline void Verification::set_verification(const void* value, size_t size) {

	verification_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:Verification.verification)
}
inline ::std::string* Verification::mutable_verification() {

	// @@protoc_insertion_point(field_mutable:Verification.verification)
	return verification_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Verification::release_verification() {
	// @@protoc_insertion_point(field_release:Verification.verification)

	return verification_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Verification::set_allocated_verification(::std::string* verification) {
	if (verification != NULL) {

	}
	else {

	}
	verification_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verification);
	// @@protoc_insertion_point(field_set_allocated:Verification.verification)
}

// -------------------------------------------------------------------

// registered

// bytes phone_number = 1;
inline void registered::clear_phone_number() {
	phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& registered::phone_number() const {
	// @@protoc_insertion_point(field_get:registered.phone_number)
	return phone_number_.GetNoArena();
}
inline void registered::set_phone_number(const ::std::string& value) {

	phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:registered.phone_number)
}
#if LANG_CXX11
inline void registered::set_phone_number(::std::string&& value) {

	phone_number_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:registered.phone_number)
}
#endif
inline void registered::set_phone_number(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:registered.phone_number)
}
inline void registered::set_phone_number(const void* value, size_t size) {

	phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:registered.phone_number)
}
inline ::std::string* registered::mutable_phone_number() {

	// @@protoc_insertion_point(field_mutable:registered.phone_number)
	return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* registered::release_phone_number() {
	// @@protoc_insertion_point(field_release:registered.phone_number)

	return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void registered::set_allocated_phone_number(::std::string* phone_number) {
	if (phone_number != NULL) {

	}
	else {

	}
	phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
	// @@protoc_insertion_point(field_set_allocated:registered.phone_number)
}

// bytes passwd = 2;
inline void registered::clear_passwd() {
	passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& registered::passwd() const {
	// @@protoc_insertion_point(field_get:registered.passwd)
	return passwd_.GetNoArena();
}
inline void registered::set_passwd(const ::std::string& value) {

	passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
	// @@protoc_insertion_point(field_set:registered.passwd)
}
#if LANG_CXX11
inline void registered::set_passwd(::std::string&& value) {

	passwd_.SetNoArena(
		&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
	// @@protoc_insertion_point(field_set_rvalue:registered.passwd)
}
#endif
inline void registered::set_passwd(const char* value) {
	GOOGLE_DCHECK(value != NULL);

	passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
	// @@protoc_insertion_point(field_set_char:registered.passwd)
}
inline void registered::set_passwd(const void* value, size_t size) {

	passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
		::std::string(reinterpret_cast<const char*>(value), size));
	// @@protoc_insertion_point(field_set_pointer:registered.passwd)
}
inline ::std::string* registered::mutable_passwd() {

	// @@protoc_insertion_point(field_mutable:registered.passwd)
	return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* registered::release_passwd() {
	// @@protoc_insertion_point(field_release:registered.passwd)

	return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void registered::set_allocated_passwd(::std::string* passwd) {
	if (passwd != NULL) {

	}
	else {

	}
	passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
	// @@protoc_insertion_point(field_set_allocated:registered.passwd)
}

// -------------------------------------------------------------------

// is_ok

// bool is_pub_key = 1;
inline void is_ok::clear_is_pub_key() {
	is_pub_key_ = false;
}
inline bool is_ok::is_pub_key() const {
	// @@protoc_insertion_point(field_get:is_ok.is_pub_key)
	return is_pub_key_;
}
inline void is_ok::set_is_pub_key(bool value) {

	is_pub_key_ = value;
	// @@protoc_insertion_point(field_set:is_ok.is_pub_key)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_gua_5finfo_2eproto
